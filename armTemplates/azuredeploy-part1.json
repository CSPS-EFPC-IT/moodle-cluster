{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "armTemplateRepoBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "The base URL of the Azure Resource Manager template repository."
            }
        },
        "corporateInternetGatewayIpAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP Address of the Corporate Internet Gateway."
            }
        },
        "databaseAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password to use in order to manage the database server."
            }
        },
        "databaseAdminUsername": {
            "type": "securestring",
            "metadata": {
                "description": "The username to use in order to manage the database server."
            }
        },
        "environmentName": {
            "type": "string",
            "defaultValue": "dev",
            "allowedValues": [
                "dev",
                "staging",
                "prod"
            ],
            "metadata": {
                "description": "The name of the provisioned environment. Used to build the service DNS name."
            }
        },
        "gatewaySslCertificateUri": {
            "type": "string",
            "metadata": {
                "description": "The URI of the SSL certificate to deploy in the Application Gateway."
            }
        },
        "gatewayUserAssignedIdentity": {
            "type": "object",
            "metadata": {
                "description": "The User Identity assigned to the Application Gateway."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The name of the location new resources will be created in."
            }
        },
        "projectName": {
            "type": "string",
            "metadata": {
                "description": "The name of the project. This string will be used to name all resources required. It may only contain letters, hyphens and underscore characters."
            }
        },
        "virtualNetworkAddressBase": {
            "type": "string",
            "metadata": {
                "description": "The virtual network IP address prefix."
            }
        }
    },
    "functions":[
        {
            "namespace": "custom",
            "members": {
                "cleanName": {
                    "parameters": [
                        {
                        "name": "dirtyName",
                        "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[replace(replace(replace(parameters('dirtyName'), '-', ''), '_', ''), ' ', '')]"
                    }
                }
            }
        }
    ],
    "variables": {
        "applicationNetworkSecurityGroupName": "[concat(variables('resourceNamePrefix'), '-PAZ-APP-NSG')]",
        "applicationSubnetAddressPrefix": "[concat(parameters('virtualNetworkAddressBase'), '.32/27')]",
        "applicationSubnetName": "[concat(variables('resourceNamePrefix'), '-PAZ-APP-SN')]",
        "bastionName": "[concat(variables('resourceNamePrefix'), '-BH')]",
        "bastionPublicIpName": "[concat(variables('bastionName'), '-PublicIP')]",
        "bastionSubnetAddressPrefix": "[concat(parameters('virtualNetworkAddressBase'), '.128/27')]",
        "bastionSubnetName": "AzureBastionSubnet",
        "dailyBackupPolicyDeploymentName": "dailyBackupPolicyDeployment",
        "databaseApplicationDatabaseName": "[tolower(custom.cleanName(parameters('projectName')))]",
        "databaseBackupRetentionDays": "35",
        "databaseName": "[concat(variables('resourceNamePrefix'), '-DB')]",
        "gatewayBackendAddressPoolName": "moodle-vmss",
        "gatewayBackendHttpSettingsCollectionName": "[concat(parameters('projectName'), '-HTTP-Settings')]",
        "gatewayFrontendIPConfigurationsName": "appGwPublicFrontendIp",
        "gatewayFrontendPortHttpName": "HTTP-Port",
        "gatewayFrontendPortHttpsName": "HTTPS-Port",
        "gatewayGatewayIPConfigurationsName": "appGatewayIpConfig",
        "gatewayHttpListenersHttpName": "HTTP-Listener",
        "gatewayHttpListenersHttpsName": "HTTPS-Listener",
        "gatewayName": "[concat(variables('resourceNamePrefix'), '-AG')]",
        "gatewayNetworkSecurityGroupName": "[concat(variables('resourceNamePrefix'), '-PAZ-AG-NSG')]",
        "gatewayPublicIpDomainNameLabel": "[tolower(concat(variables('resourceNamePrefix')))]",
        "gatewayPublicIpName": "[concat(variables('gatewayName'), '-PublicIP')]",
        "gatewayRedirectConfigurationsName": "HTTP-Redirect",
        "gatewayRequestRoutingRuleHttpName": "HTTP-Rule",
        "gatewayRequestRoutingRuleHttpsName": "HTTPS-Rule",
        "gatewaySslCertificateHttpsName": "HTTPS-Certificate",
        "gatewaySubnetAddressPrefix": "[concat(parameters('virtualNetworkAddressBase'), '.0/27')]",
        "gatewaySubnetName": "[concat(variables('resourceNamePrefix'), '-PAZ-AG-SN')]",
        "moodleFileServiceName": "Default",
        "moodleShareName": "moodledata",
        "moodleStorageAccountName": "[tolower(concat(take(custom.cleanName(parameters('projectName')), 13), if(equals(parameters('environmentName'), 'prod'), '', take(parameters('environmentName'), 4)), 'datasa'))]",
        "recoveryServiceVaultDeploymentName": "recoveryServiceVaultDeployment",
        "redisName": "[concat(variables('resourceNamePrefix'), '-Redis')]",
        "redisNetworkSecurityGroupName": "[concat(variables('resourceNamePrefix'),'-PAZ-Redis-NSG')]",
        "redisSubnetAddressPrefix": "[concat(parameters('virtualNetworkAddressBase'), '.96/27')]",
        "redisSubnetName": "[concat(variables('resourceNamePrefix'), '-PAZ-Redis-SN')]",
        "resourceNamePrefix" : "[if(equals(parameters('environmentName'), 'prod'), parameters('projectName'), concat(parameters('projectName'), '-', toupper(parameters('environmentName'))))]",
        "virtualNetworkAddressPrefix": "[concat(parameters('virtualNetworkAddressBase'), '.0/24')]",
        "virtualNetworkName": "[concat(variables('resourceNamePrefix'), '-VN')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('gatewayNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('applicationNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('redisNetworkSecurityGroupName'))]"
           ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('bastionSubnetAddressPrefix')]",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('gatewaySubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('gatewayNetworkSecurityGroupName'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('applicationSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('applicationSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('applicationNetworkSecurityGroupName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "[parameters('location')]"
                                    ]
                                },
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "[parameters('location')]"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('redisSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('redisNetworkSecurityGroupName'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('bastionPublicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-11-01",
            "name": "[variables('bastionName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('bastionSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('gatewayNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowPublicInternet_Any_80_443",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "80",
                                "443"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowGatewayManager_TCP_65200-65535",
                        "properties": {
                            "description": "https://docs.microsoft.com/en-us/azure/application-gateway/configuration-overview#network-security-groups-on-the-application-gateway-subnet",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_Any_Any",
                        "properties": {
                            "description": "https://docs.microsoft.com/en-us/azure/application-gateway/configuration-overview#network-security-groups-on-the-application-gateway-subnet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOtherTraffic",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4096,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('gatewayPublicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('gatewayPublicIpDomainNameLabel')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('gatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayPublicIpName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": "[parameters('gatewayUserAssignedIdentity')]"
            },
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('gatewayGatewayIPConfigurationsName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('gatewaySubnetName'))]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('gatewayFrontendIPConfigurationsName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('gatewayPublicIpName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('gatewayFrontendPortHttpName')]",
                        "properties": {
                            "port": 80
                        }
                    },
                    {
                        "name": "[variables('gatewayFrontendPortHttpsName')]",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('gatewayBackendAddressPoolName')]",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('gatewayBackendHttpSettingsCollectionName')]",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 60
                        }
                    }
                ],
                "sslCertificates": [
                    {
                        "name": "[variables('gatewaySslCertificateHttpsName')]",
                        "properties": {
                            "keyVaultSecretId": "[parameters('gatewaySslCertificateUri')]"
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('gatewayHttpListenersHttpsName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/frontendIPConfigurations/', variables('gatewayFrontendIPConfigurationsName'))]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/frontendPorts/', variables('gatewayFrontendPortHttpsName'))]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/sslCertificates/', variables('gatewaySslCertificateHttpsName'))]"
                            },
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    },
                    {
                        "name": "[variables('gatewayHttpListenersHttpName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/frontendIPConfigurations/', variables('gatewayFrontendIPConfigurationsName'))]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/frontendPorts/', variables('gatewayFrontendPortHttpName'))]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "[variables('gatewayRequestRoutingRuleHttpsName')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/httpListeners/', variables('gatewayHttpListenersHttpsName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/backendAddressPools/', variables('gatewayBackendAddressPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/backendHttpSettingsCollection/', variables('gatewayBackendHttpSettingsCollectionName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('gatewayRequestRoutingRuleHttpName')]",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/httpListeners/', variables('gatewayHttpListenersHttpName'))]"
                            },
                            "redirectConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/redirectConfigurations/', variables('gatewayRedirectConfigurationsName'))]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [
                    {
                        "name": "[variables('gatewayRedirectConfigurationsName')]",
                        "properties": {
                            "redirectType": "Permanent",
                            "targetListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/httpListeners/', variables('gatewayHttpListenersHttpsName'))]"
                            },
                            "includePath": true,
                            "includeQueryString": true,
                            "requestRoutingRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('gatewayName')), '/requestRoutingRules/', variables('gatewayRequestRoutingRuleHttpName'))]"
                                }
                            ]
                        }
                    }
                ],
                "sslPolicy": {
                    "policyType": "Custom",
                    "minProtocolVersion": "TLSv1_2",
                    "cipherSuites": [
                        "TLS_RSA_WITH_AES_256_CBC_SHA256",
                        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
                        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                        "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                        "TLS_RSA_WITH_AES_128_GCM_SHA256",
                        "TLS_RSA_WITH_AES_128_CBC_SHA256"
                    ]
                },
                "enableHttp2": false,
                "autoscaleConfiguration": {
                    "minCapacity": 1,
                    "maxCapacity": 10
                }
            }
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('applicationNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "[concat('Allow', variables('gatewayName'), '_TCP_80')]",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "[variables('gatewaySubnetAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "80"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('bastionName'), '_TCP_22')]",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[variables('bastionSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('databaseName'), '_TCP_5432')]",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5432",
                            "sourceAddressPrefix": "[variables('applicationSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOtherTraffic",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4096,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('moodleStorageAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "kind": "FileStorage",
            "properties": {
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('applicationSubnetName'))]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                        {
                            "value": "[parameters('corporateInternetGatewayIpAddress')]",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('moodleStorageAccountName'), '/', variables('moodleFileServiceName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('moodleStorageAccountName'))]"
            ],
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('moodleStorageAccountName'), '/', variables('moodleFileServiceName'), '/', variables('moodleShareName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('moodleStorageAccountName'), variables('moodleFileServiceName'))]"
            ],
            "properties": {
                "shareQuota": 1024
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('recoveryServiceVaultDeploymentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('moodleStorageAccountName'), variables('moodleFileServiceName'), variables('moodleShareName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri":"[concat(parameters('armTemplateRepoBaseUrl'), '/Recovery%20Services%20Vault/VaultDeploy.json')]"
                },
                "parameters": {
                    "projectName":{
                        "value": "[parameters('projectName')]"
                    },
                    "environmentName":{
                        "value": "[parameters('environmentName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('dailyBackupPolicyDeploymentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('recoveryServiceVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri":"[concat(parameters('armTemplateRepoBaseUrl'), '/Recovery%20Services%20Vault/Azure%20File%20Share%20Backup/FileShareDailyPolicyDeploy.json')]"
                },
                "parameters": {
                    "vaultName":{
                        "value": "[reference(variables('recoveryServiceVaultDeploymentName')).outputs.vaultName.value]"
                    },
                    "dailyBackupsRetention":{
                        "value": 90
                        },
                    "backupTime":{
                        "value": "00:00"
                    }
                }
            }
        },

        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[variables('databaseName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "GP_Gen5_4",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 4
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 102400,
                    "backupRetentionDays": "[variables('databaseBackupRetentionDays')]",
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Enabled"
                },
                "version": "10",
                "sslEnforcement": "Enabled",
                "minimalTlsVersion": "TLS1_2",
                "createMode": "Default",
                "administratorLogin": "[parameters('databaseAdminUsername')]",
                "administratorLoginPassword": "[parameters('databaseAdminPassword')]"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('databaseName'), '/azure.replication_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseName'))]"
            ],
            "properties": {
                "value": "OFF",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('databaseName'), '/pg_qs.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseName'))]"
            ],
            "properties": {
                "value": "ALL",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('databaseName'), '/pgms_wait_sampling.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseName'))]"
            ],
            "properties": {
                "value": "ALL",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('databaseName'), '/', variables('databaseApplicationDatabaseName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseName'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(variables('databaseName'), '/', variables('applicationSubnetName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('databaseName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('applicationSubnetName'))]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('redisNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                     {
                        "name": "[concat('Allow', variables('redisSubnetName'), '_TCP_6379-6380')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6379-6380",
                            "sourceAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('applicationSubnetName'), '_TCP_6379-6380')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6379-6380",
                            "sourceAddressPrefix": "[variables('applicationSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_6379-6380",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6379-6380",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('redisSubnetName'), '_TCP_8443')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8443",
                            "sourceAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_8500",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8500",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_UDP_8500",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8500",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('redisSubnetName'), '_TCP_10221-10231')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "10221-10231",
                            "sourceAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_10221-10231",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "10221-10231",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 410,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('applicationSubnetName'), '_TCP_13000-13999')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "13000-13999",
                            "sourceAddressPrefix": "[variables('applicationSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_13000-13999",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "13000-13999",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 510,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('applicationSubnetName'), '_TCP_15000-15999')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "15000-15999",
                            "sourceAddressPrefix": "[variables('applicationSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 600,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_15000-15999",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "15000-15999",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 610,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_TCP_16001",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "16001",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 700,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancer_UDP_16001",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "16001",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 710,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[concat('Allow', variables('redisSubnetName'), '_TCP_20226')]",
                        "properties": {
                            "description": "Ref.: https://docs.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-premium-vnet#inbound-port-requirements",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "20226",
                            "sourceAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "destinationAddressPrefix": "[variables('redisSubnetAddressPrefix')]",
                            "access": "Allow",
                            "priority": 800,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOtherTraffic",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4096,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "name": "[variables('redisName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Premium",
                    "family": "P",
                    "capacity": 1
                },
                "enableNonSslPort": true,
                "redisConfiguration": {
                    "maxclients": "7500",
                    "maxmemory-reserved": "200",
                    "maxfragmentationmemory-reserved": "300",
                    "maxmemory-delta": "200"
                },
                "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('redisSubnetName'))]"
            }
        }
    ],
    "outputs": {
        "applicationNetworkSecurityGroupName": {
            "type": "string",
            "value": "[variables('applicationNetworkSecurityGroupName')]"
        },
        "applicationSubnetName": {
            "type": "string",
             "value": "[variables('applicationSubnetName')]"
        },
        "databaseApplicationDatabaseName": {
            "type": "string",
            "value": "[variables('databaseApplicationDatabaseName')]"
        },
        "databaseFqdn": {
            "type": "string",
            "value": "[reference(variables('databaseName')).fullyQualifiedDomainName]"
        },
        "databaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        },
        "gatewayBackendAddressPoolName": {
            "type": "string",
            "value": "[variables('gatewayBackendAddressPoolName')]"
        },
        "gatewayName": {
            "type": "string",
            "value": "[variables('gatewayName')]"
        },
        "gatewayPublicIpFqdn": {
            "type": "string",
            "value": "[reference(variables('gatewayPublicIpName')).dnsSettings.fqdn]"
        },
        "moodleShareName": {
            "type": "string",
            "value": "[variables('moodleShareName')]"
        },
        "moodleStorageAccountKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('moodleStorageAccountName')), '2019-04-01').keys[0].value]"
        },
        "moodleStorageAccountName": {
            "type": "string",
            "value": "[variables('moodleStorageAccountName')]"
        },
        "moodleStorageAccountFilePrimaryEndPoint": {
            "type": "string",
            "value": "[reference(variables('moodleStorageAccountName')).primaryEndpoints['file']]"
        },
        "redisHostName": {
            "type": "string",
            "value": "[reference(variables('redisName')).hostName]"
        },
        "redisName": {
            "type": "string",
            "value": "[variables('redisName')]"
        },
        "redisPrimaryKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisName')), '2019-07-01').primarykey]"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[variables('virtualNetworkName')]"
        }
    }
}